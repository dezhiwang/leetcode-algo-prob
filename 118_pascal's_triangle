class Solution(object):
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        root = []
        if numRows == 0:
            return root
        for n in range(1, numRows+1):
            root.append([1] * n)
            for i in range(1, len(root[n-1])-1):
                root[n-1][i] = root[n-2][i-1] + root[n-2][i]
        return root            

class Solution:
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        if numRows == 0:
            return []
        tri = [[1]]
        for i in range(1, numRows):
            tri.append(list(map(lambda x, y: x + y, tri[-1] + [0], [0] + tri[-1])))
        return tri
