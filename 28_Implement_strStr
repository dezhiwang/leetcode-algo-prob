class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        return haystack.find(needle)

class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if not needle:
            return 0
        for i in range(len(haystack) - len(needle) + 1):
            if haystack[i] == needle[0]:
                car = 1
                while car < len(needle) and haystack[i+car] == needle[car]:
                    car += 1 
                if (car) == len(needle):
                    return i
        return -1

class Solution:
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if needle == "":
            return 0
        for i in range((len(haystack) - len(needle) + 1)):
            if haystack[i] == needle[0]:
                flag = True
                for j in range(len(needle)):
                    if haystack[i+j] != needle[j]:
                        flag = False
                if flag == True:
                    return i
        return -1
